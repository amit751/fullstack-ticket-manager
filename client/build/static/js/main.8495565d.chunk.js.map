{"version":3,"sources":["logo.svg","components/Ticket.js","components/Search.js","components/DisplayTicket.js","App.js","serviceWorker.js","index.js"],"names":["Ticket","ticket","onClick","displayTicket","labels","className","e","width","height","src","title","userEmail","creationTime","toString","replace","slice","map","lable","i","Search","onChange","placeholder","id","target","value","type","DisplayTicket","exitDisplay","xmlns","fill","viewBox","d","content","axios","require","App","useState","ticketToDisplay","setticketToDisplay","counter","setCounter","tickets","setTickets","startIndex","setStartIndex","lastIndex","setLastIndex","useEffect","newCounter","forEach","hide","get","then","data","console","log","catch","message","searchText","a","newTickets","find","restore","tagName","ticketsElements","filter","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8495565d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","export default function Ticket({ ticket, onClick, displayTicket }) {\r\n  if (ticket.labels) {\r\n    return (\r\n      <div\r\n        className=\"ticket\"\r\n        onClick={(e) => {\r\n          displayTicket(e, ticket);\r\n        }}\r\n      >\r\n        <img\r\n          width=\"30\"\r\n          height=\"30\"\r\n          src=\"./image/HI.png\"\r\n          className=\"hideTicketButton\"\r\n          onClick={() => {\r\n            onClick(ticket.title);\r\n          }}\r\n        />\r\n\r\n        <h1>{ticket.title}</h1>\r\n        {/* <p>{ticket.content}</p> */}\r\n        <div className=\"details\">\r\n          <p>\r\n            by {ticket.userEmail} |{\" \"}\r\n            {ticket.creationTime\r\n              .toString()\r\n              .replace(\".\", \"-\")\r\n              .replace(\".\", \"-\")\r\n              .replace(\",\", \" \")\r\n              .replace(\"Z\", \" \")\r\n              .replace(\"T\", \" \")\r\n              .slice(0, -5)}\r\n          </p>\r\n        </div>\r\n        <div className=\"done\">\r\n          {/* <p>done: {ticket.done.toString()}</p> */}\r\n        </div>\r\n        <div className=\"labels-container\">\r\n          {ticket.labels.map((lable, i) => {\r\n            return (\r\n              <button key={i} className={`label ${lable}`}>\r\n                {\" \"}\r\n                {lable}{\" \"}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className=\"ticket\"\r\n        onClick={() => {\r\n          displayTicket(ticket);\r\n        }}\r\n      >\r\n        {/* <button\r\n          className=\"hideTicketButton\"\r\n          onClick={() => {\r\n            onClick(ticket.title);\r\n          }}\r\n        /> */}\r\n        <img\r\n          width=\"10\"\r\n          height=\"10\"\r\n          src=\"./image/HI.png\"\r\n          className=\"hideTicketButton\"\r\n          onClick={() => {\r\n            onClick(ticket.title);\r\n          }}\r\n        />\r\n\r\n        <h1>{ticket.title}</h1>\r\n        {/* <p>{ticket.content}</p> */}\r\n        <div className=\"details\">\r\n          <p>\r\n            by {ticket.userEmail} | {ticket.creationTime}\r\n          </p>\r\n        </div>\r\n        <div className=\"done\">\r\n          {/* <p>done: {ticket.done.toString()}</p> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function Search({ onChange }) {\r\n  return (\r\n    <div className=\"Search\">\r\n      <input\r\n        placeholder=\"filter\"\r\n        id=\"searchInput\"\r\n        onChange={(e) => {\r\n          onChange(e.target.value);\r\n        }}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","export default function DisplayTicket({ ticket, displayTicket, exitDisplay }) {\r\n  if (ticket.labels) {\r\n    return (\r\n      <div className=\"display-ticket-container\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-x-octagon exit\"\r\n          viewBox=\"0 0 16 16\"\r\n          className=\"exitDisplay\"\r\n          onClick={exitDisplay}\r\n        >\r\n          <path d=\"M4.54.146A.5.5 0 0 1 4.893 0h6.214a.5.5 0 0 1 .353.146l4.394 4.394a.5.5 0 0 1 .146.353v6.214a.5.5 0 0 1-.146.353l-4.394 4.394a.5.5 0 0 1-.353.146H4.893a.5.5 0 0 1-.353-.146L.146 11.46A.5.5 0 0 1 0 11.107V4.893a.5.5 0 0 1 .146-.353L4.54.146zM5.1 1L1 5.1v5.8L5.1 15h5.8l4.1-4.1V5.1L10.9 1H5.1z\" />\r\n          <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n        </svg>\r\n\r\n        <h1>{ticket.title}</h1>\r\n        <p className=\"ticket-content\">{ticket.content}</p>\r\n\r\n        {/* <div className=\"done\">\r\n          <p>done: {ticket.done.toString()}</p>\r\n        </div> */}\r\n        <div className=\"labels-container\">\r\n          {ticket.labels.map((lable, i) => {\r\n            return (\r\n              <button key={i} className={`label ${lable}`}>\r\n                {\" \"}\r\n                {lable}{\" \"}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"details\">\r\n          <p>\r\n            by {ticket.userEmail} |{\" \"}\r\n            {ticket.creationTime\r\n              .toString()\r\n              .replace(\".\", \"-\")\r\n              .replace(\".\", \"-\")\r\n              .replace(\",\", \" \")\r\n              .replace(\"Z\", \" \")\r\n              .replace(\"T\", \" \")\r\n              .slice(0, -5)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"display-ticket-container\">\r\n        <h1>{ticket.title}</h1>\r\n        <p className=\"ticket-content\">{ticket.content}</p>\r\n        <div className=\"details\">\r\n          <p>\r\n            by {ticket.userEmail} | {ticket.creationTime}\r\n          </p>\r\n        </div>\r\n        {/* <div className=\"done\">\r\n          <p>done: {ticket.done.toString()}</p>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Ticket from \"./components/Ticket\";\r\nimport Search from \"./components/Search\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { set } from \"mongoose\";\r\nimport DisplayTicket from \"./components/DisplayTicket\";\r\nimport e from \"cors\";\r\nconst axios = require(\"axios\");\r\n\r\nfunction App() {\r\n  //await axios.get(`/api/tickets`)\r\n  const [ticketToDisplay, setticketToDisplay] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [tickets, setTickets] = useState([]);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [lastIndex, setLastIndex] = useState(6);\r\n  useEffect(() => {\r\n    let newCounter = 0;\r\n    tickets.forEach((ticket) => {\r\n      if (ticket.hide) ++newCounter;\r\n    });\r\n\r\n    setCounter(newCounter);\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/tickets`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        setTickets(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.message);\r\n      });\r\n  }, []);\r\n\r\n  const onChange = async (searchText) => {\r\n    const { data } = await axios.get(`/api/tickets?searchText=${searchText}`);\r\n    setTickets(data);\r\n  };\r\n  const onClick = (title) => {\r\n    const newTickets = tickets.slice();\r\n    const ticketToHide = newTickets.find((ticket) => {\r\n      return ticket.title === title;\r\n    });\r\n\r\n    ticketToHide.hide = true;\r\n\r\n    setTickets(newTickets);\r\n  };\r\n  const restore = () => {\r\n    const newTickets = tickets.slice();\r\n    newTickets.forEach((ticket) => {\r\n      ticket.hide = false;\r\n    });\r\n    setTickets(newTickets);\r\n  };\r\n  const nextPage = () => {\r\n    if (startIndex < tickets.length - 6) {\r\n      setStartIndex(startIndex + 6);\r\n      setLastIndex(lastIndex + 6);\r\n    }\r\n  };\r\n  const prevPage = () => {\r\n    if (startIndex >= 6) {\r\n      setStartIndex(startIndex - 6);\r\n      setLastIndex(lastIndex - 6);\r\n    }\r\n  };\r\n  const exitDisplay = () => {\r\n    setticketToDisplay(\"\");\r\n  };\r\n  const displayTicket = (e, ticket) => {\r\n    console.log(e.target.tagName);\r\n    if (ticket !== \"\" && e.target.tagName !== \"IMG\") {\r\n      const element = (\r\n        <div id=\"displayed-ticket\">\r\n          <DisplayTicket ticket={ticket} exitDisplay={exitDisplay} />\r\n        </div>\r\n      );\r\n      setticketToDisplay(element);\r\n    }\r\n  };\r\n\r\n  const ticketsElements = tickets\r\n    .filter((ticket) => {\r\n      return !ticket.hide;\r\n    })\r\n    .map((ticket, i) => {\r\n      return (\r\n        <Ticket\r\n          key={i}\r\n          ticket={ticket}\r\n          onClick={onClick}\r\n          displayTicket={displayTicket}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {ticketToDisplay}\r\n      <div className=\"header\">\r\n        <h1>ticket Manager</h1>\r\n        <Search onChange={onChange} />\r\n        <p id=\"shown\">\r\n          {ticketsElements.length} are shown{\" \"}\r\n          <span id=\"hideTicketsCounter\">{counter}</span> are hidden\r\n        </p>\r\n      </div>\r\n\r\n      <div id=\"nav-buttons\">\r\n        <svg\r\n          onClick={prevPage}\r\n          id=\"prev\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"40\"\r\n          height=\"40\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-arrow-left-circle-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n        </svg>\r\n        <span id=\"restoreHideTickets\" onClick={restore}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-bootstrap-reboot res-icon\"\r\n            viewBox=\"0 0 16 16\"\r\n            onClick={restore}\r\n          >\r\n            <path d=\"M1.161 8a6.84 6.84 0 1 0 6.842-6.84.58.58 0 0 1 0-1.16 8 8 0 1 1-6.556 3.412l-.663-.577a.58.58 0 0 1 .227-.997l2.52-.69a.58.58 0 0 1 .728.633l-.332 2.592a.58.58 0 0 1-.956.364l-.643-.56A6.812 6.812 0 0 0 1.16 8z\" />\r\n            <path d=\"M6.641 11.671V8.843h1.57l1.498 2.828h1.314L9.377 8.665c.897-.3 1.427-1.106 1.427-2.1 0-1.37-.943-2.246-2.456-2.246H5.5v7.352h1.141zm0-3.75V5.277h1.57c.881 0 1.416.499 1.416 1.32 0 .84-.504 1.324-1.386 1.324h-1.6z\" />\r\n          </svg>\r\n          <span id=\"res-text\">estore</span>\r\n        </span>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"40\"\r\n          height=\"40\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-arrow-right-circle-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n          onClick={nextPage}\r\n          id=\"next\"\r\n        >\r\n          <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n        </svg>\r\n      </div>\r\n      <div className=\"tickets-container\">\r\n        {ticketsElements.slice(startIndex, lastIndex)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}